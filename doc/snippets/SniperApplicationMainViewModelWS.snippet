<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
    <CodeSnippet Format="1.0.0">
        <Header>
            <Title>Sniper Application Main Ws for the walking skeleton</Title>
            <Shortcut>SniperApplicationMainWs</Shortcut>
        </Header>
        <Snippet>
            <Code Language="CSharp">
                <![CDATA[public class MainViewModel : AbstractViewModel, IExpectViewLoadedCallback
    {
        readonly IMessageBroker broker;
        private readonly Lazy<IMessageSession> endpointInstance;
        private readonly ILogger<MainViewModel> logger;

        public MainViewModel(IMessageBroker broker, Lazy<IMessageSession> endpointInstance, ILogger<MainViewModel> logger)
        {
            this.broker = broker;

            this.broker.Subscribe<JoinCompleted>(this, OnJoinCompleted);
            this.broker.Subscribe<AuctionClosed>(this, OnAuctionClosed);

            this.endpointInstance = endpointInstance;
            this.logger = logger ?? throw new ArgumentNullException("logger MainViewModel null");
            
        }

        private void OnAuctionClosed(object arg1, AuctionClosed arg2)
        {
            this.Status = PresentationConstValue.STATUS_LOST;
        }

        public void OnJoinCompleted(object sender, JoinCompleted message)
        {
            this.Status = PresentationConstValue.STATUS_JOINING;
        }

        public void OnViewLoaded()
        {
            this.logger.LogDebug("MainViewModel OnViewLoaded");
            this.logger.LogDebug(endpointInstance.Value.ToString());
            var sendTask = endpointInstance.Value.Send("AuctionServer", new Join("item-1234"));
            this.logger.LogDebug("Join sent");
            sendTask.GetAwaiter().GetResult();
        }

        public string Status {
            get { return this.GetPropertyValue(() => this.Status); }
            set { this.SetPropertyValue(() => this.Status, value); }
        }
    }]]>
            </Code>
        </Snippet>
    </CodeSnippet>
</CodeSnippets>

